name: Migrate Database

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to migrate (staging, production)"
        required: true
        type: string

jobs:
  migrate-database:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.DBMIGRATE_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.DBMIGRATE_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.DBMIGRATE_AZURE_SUBSCRIPTION_ID }}

      - name: Retrieve Access Token
        id: get-access-token
        run: |
          ACCESS_TOKEN=$(az account get-access-token --resource https://ossrdbms-aad.database.windows.net --query accessToken --output tsv)
          echo "Found access token: $ACCESS_TOKEN"
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Find Managed Identity by Name Prefix
        id: find_identity
        run: |
          IDENTITY_NAME=$(az identity list --query "[?starts_with(name, 'id-aiasst-api')].name | [0]" -o tsv)
          echo "Found identity: $IDENTITY_NAME"
          echo "IDENTITY_NAME=$IDENTITY_NAME" >> $GITHUB_ENV

      - name: Run SQL to Create and Grant Role
        env:
          PGPASSWORD: ${{ env.ACCESS_TOKEN }}
        run: |
          psql "host=${{ secrets.DB_HOST }} port=5432 dbname=postgres user=${{ secrets.DB_USER }} sslmode=require" \
          -c "SELECT * FROM pgaadauth_create_principal('${IDENTITY_NAME}', false, false);" \
          -c "GRANT api_user TO \"${IDENTITY_NAME}\";"
