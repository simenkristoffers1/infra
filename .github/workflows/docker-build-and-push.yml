name: Docker Build and Push to GHCR

on:
  workflow_call:
    inputs:
      context:
        description: "Path to the build context directory"
        required: true
        type: string
      dockerfile:
        description: "Path to the Dockerfile"
        required: true
        type: string
      image_name:
        description: "Name of the Docker image (without registry prefix)"
        required: true
        type: string
    outputs:
      image_name_with_digest:
        description: "The full image name with digest"
        value: ${{ jobs.build-and-push.outputs.image_name_with_digest }}

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      image_name_with_digest: ${{ steps.set-output.outputs.image_name_with_digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image_name }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Output image name with digest
        id: set-output
        run: |
          FULL_IMAGE_NAME="${{ inputs.image_name }}@${{ steps.push.outputs.digest }}"
          echo "Image name with digest: $FULL_IMAGE_NAME"
          echo "image_name_with_digest=$FULL_IMAGE_NAME" >> $GITHUB_OUTPUT
